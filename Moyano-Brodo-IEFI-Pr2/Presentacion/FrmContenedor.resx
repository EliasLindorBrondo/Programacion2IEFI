<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TkSuQmCC
</value>
  </data>
</root>